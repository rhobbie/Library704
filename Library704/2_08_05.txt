.Module 2_08_05	// 2.08.05 STG REG(1-8) -> ADDER & STG REG(9-35) -> ADDER
2_08_05_[A-D][1-8] : 2_08_05
AI1 AI2 AI3 AI4 AI5 AI6 AI7 AI8 AI9 AI10 AO : OR10
BI1 BI2 BO : AND2
CI1 CI2 CO : AND2
DI1 DI2 DO : AND2
EI1 EI2 EO : AND2
FI1 FI2 FO : AND2
GI1 GI2 GO : AND2
HI1 HI2 HO : OR2
JI1 JI2 JO : AND2

// MF1 J27 9130 07
// MF1 A35 9043 01 03A 04-05 06A 07-08

.Signals
I 2_08_05_A1 ADD/SUB, (E9 UNTIL CT2)
I 2_08_05_A2 MPY/MPYR ADR CTR NOT ZERO  [SR(1-35) -> ADDERS]
I 2_08_05_A3 DIVIDE ER TIME [SR(1-35) -> ADDERS]
I 2_08_05_A4 F.P. ADD/SUB, 1ST STEP [STG R(1-35) -> ADDERS]
I 2_08_05_A5 F.P. ADD/SUB  3RD STEP [STG REG(1-35) -> ADDERS][ERO[D6]]
I 2_08_05_A6 ER0(D6)
I 2_08_05_A7 FP MPY FIRST STEP [STG REG (1-8) -> ADDERS] [ER0(D4)], [ER6(D4)]
I 2_08_05_A8 ER0(D4)
I 2_08_05_B1 ER6(D4)
O 2_08_05_B2 STG REG(1-8) -> ADDER
O 2_08_05_B3 STG REG(9-35) -> ADDER
I 2_08_05_B4 F.P. MPY 2ND STEP SHIFT COUNTER NOT ZERO [STG REG (9-35) -> ADDERS]
I 2_08_05_B5 F.P. DIVIDE 1ST STEP [STORAGE REG(9-35)-> ADDERS][ER0(D4)]
I 2_08_05_B6 F.P DIVIDE, 1ST STEP, Ti OFF [STG REG(1-8) -> ADDERS][ER6(D4)]
I 2_08_05_B7 F.P DIVIDE 2ND STEP [STG REG(9-35)-> ADDER][ER6(D4)]
I 2_08_05_B8 F.P DIVIDE 3RD STEP [STG REG(9-35)-> ADDER]
I 2_08_05_C1 F.P DIVIDE 4TH STEP [STG REG(9-35)-> ADDER][ER0(D4)]
I 2_08_05_C2 AND TO ACC/STG [STG REG -> ADDER] [ER0(D6)]
I 2_08_05_C3 AND TO STG CNTL [STG REG -> ADDER E0(D4)](E6 D4)
I 2_08_05_C4 E0(D4)
I 2_08_05_C5 PRI OPN (O4) ADDER CNTL. [SR -> ADDERS]
I 2_08_05_C6 STG REG -> ADDERS (CAS CNTL)
I 2_08_05_C7 CLEAR AND ADD/AND CNTL [STG REG(1-35) -> ADDERS]
I 2_08_05_C8 INDEXING OPERATION STG REG(1-35) -> ADDERS(1-35)
I 2_08_05_D1 E TIME
I 2_08_05_D2 MINUS A5(D1) OR 11(D1) PWD
I 2_08_05_D3 MINUS ER0(D4)
I 2_08_05_D4 I0(D4)
I 2_08_05_D5 LATE A6(D4)
I 2_08_05_D6 E9 TILL CT2
I 2_08_05_D7 ER3(D4)
I 2_08_05_D8 PRI OPN [36] ADD AND CARRY LOGICAL WORD

.Connect
// BI1 BI2 BO : AND2
W 2_08_05_D2 BI1 // MINUS A5(D1) OR 11(D1) PWD
W 2_08_05_A3 BI2 // DIVIDE ER TIME [SR(1-35) -> ADDERS]


// EI1 EI2 EO : AND2
W 2_08_05_C7 EI1 // CLEAR AND ADD/AND CNTL [STG REG(1-35) -> ADDERS]
W 2_08_05_D4 EI2 // I0(D4)


// CI1 CI2 CO : AND2
W 2_08_05_D8 CI1 // PRI OPN [36] ADD AND CARRY LOGICAL WORD
W 2_08_05_D6 CI2 // E9 TILL CT2

// DI1 DI2 DO : AND2
W 2_08_05_B1 DI1 // ER6(D4)
W 2_08_05_C5 DI2 // PRI OPN (O4) ADDER CNTL. [SR -> ADDERS]

// FI1 FI2 FO : AND2
W 2_08_05_C2 FI1 // AND TO ACC/STG [STG REG -> ADDER] [ER0(D6)]
W 2_08_05_A6 FI2 // ER0(D6)






// GI1 GI2 GO : AND2
W 2_08_05_D1 GI1 //  E TIME
W 2_08_05_D5 GI2 // LATE A6(D4)

// HI1 HI2 HO : OR2
W GO HI1
W 2_08_05_C4 HI2  // E0(D4)

// JI1 JI2 JO : AND2
W 2_08_05_C3 JI1 // AND TO STG CNTL [STG REG -> ADDER E0(D4)](E6 D4)
W HO JI2

W 2_08_05_A1 AI1 // ADD/SUB, (E9 UNTIL CT2)
W 2_08_05_A2 AI2 // MPY/MPYR ADR CTR NOT ZERO  [SR(1-35) -> ADDERS]
W BO AI3 
W CO AI4
W 2_08_05_C8 AI5 // INDEXING OPERATION STG REG(1-35) -> ADDERS(1-35)
W DO AI6 
W 2_08_05_C6 AI7 // STG REG -> ADDERS (CAS CNTL)
W EO AI8 
W FO AI9
W JO AI10

W AO 2_08_05_B2 // STG REG(1-8) -> ADDER
W AO 2_08_05_B3 // STG REG(9-35) -> ADDER





1MEG 2_08_05_A4 0V // F.P. ADD/SUB, 1ST STEP [STG R(1-35) -> ADDERS]
1MEG 2_08_05_A5 0V // F.P. ADD/SUB  3RD STEP [STG REG(1-35) -> ADDERS][ERO[D6]]
1MEG 2_08_05_A7 0V // FP MPY FIRST STEP [STG REG (1-8) -> ADDERS] [ER0(D4)], [ER6(D4)]
1MEG 2_08_05_A8 0V // ER0(D4)
1MEG 2_08_05_B4 0V // F.P. MPY 2ND STEP SHIFT COUNTER NOT ZERO [STG REG (9-35) -> ADDERS]
1MEG 2_08_05_B5 0V // F.P. DIVIDE 1ST STEP [STORAGE REG(9-35)-> ADDERS][ER0(D4)]
1MEG 2_08_05_B6 0V // F.P DIVIDE, 1ST STEP, Ti OFF [STG REG(1-8) -> ADDERS][ER6(D4)]
1MEG 2_08_05_B7 0V // F.P DIVIDE 2ND STEP [STG REG(9-35)-> ADDER][ER6(D4)]
1MEG 2_08_05_B8 0V // F.P DIVIDE 3RD STEP [STG REG(9-35)-> ADDER]
1MEG 2_08_05_C1 0V // F.P DIVIDE 4TH STEP [STG REG(9-35)-> ADDER][ER0(D4)]

1MEG 2_08_05_D3 0V // MINUS ER0(D4)
1MEG 2_08_05_D7 0V // ER3(D4)








.End