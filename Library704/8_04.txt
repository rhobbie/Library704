.Module 8_04 // 8.04 Clock

8_04_A[1-3] 8_04_01_A[1-4] 8_04_02_A[1-4] 8_04_03_A[1-4] 8_04_CL 8_04_RES : 8_04

.Signals
O 8_04_A1 TALLY CTR DRIVE LINE
O 8_04_A2 SHIFT CNTR DRIVE LINE
I 8_04_A3 CLOCK RESET
O 8_04_01_A1 MA0(D1)
O 8_04_01_A2 MA1(D1)
O 8_04_01_A4 MA2(D1)
O 8_04_01_A3 MA3(D1)
O 8_04_02_A1 MA4(D1)
O 8_04_02_A2 MA5(D1)
O 8_04_02_A3 MA6(D1)
O 8_04_02_A4 MA7(D1)
O 8_04_03_A1 MA8(D1)
O 8_04_03_A2 MA9(D1)
O 8_04_03_A3 MA10(D1)
O 8_04_03_A4 MA11(D1)

I 8_04_CL Clock
I 8_04_RES Reset

.Logic
reg ICL=0;
reg R0=1,R1=0,R2=0,R3=0,R4=0,R5=0,R6=0,R7=0,R8=0,R9=0,R10=0,R11=0;

always @*
begin
  if(_8_04_A3|_8_04_RES)
    begin
      R0=1;
      R1=0;
      R2=0;      
      R3=0;
      R4=0;
      R5=0;      
      R6=0;
      R7=0;
      R8=0;      
      R9=0;
      R10=0;
      R11=0;      
	  ICL=0;
    end
end

always@(negedge _8_04_CL)
begin
  if(~_8_04_A3&~_8_04_RES)
  begin
	R0<=R11;
	R1<=R0;
	R2<=R1;      
	R3<=R2; 
	R4<=R3;
	R5<=R4;      
	R6<=R5; 
	R7<=R6;
	R8<=R7;      
	R9<=R8; 
	R10<=R9;
	R11<=R10;
	ICL<=0;
  end
end 

always@(posedge _8_04_CL)  
	ICL<=1;

assign _8_04_01_A1=R0; // MA0(D1)
assign _8_04_01_A2=R1; // MA1(D1)
assign _8_04_01_A4=R2; // MA2(D1)
assign _8_04_01_A3=R3; // MA3(D1)
assign _8_04_02_A1=R4; // MA4(D1)
assign _8_04_02_A2=R5; // MA5(D1)
assign _8_04_02_A3=R6; // MA6(D1)
assign _8_04_02_A4=R7; // MA7(D1)
assign _8_04_03_A1=R8; // MA8(D1)
assign _8_04_03_A2=R9; // MA9(D1)
assign _8_04_03_A3=R10; // MA10(D1)
assign _8_04_03_A4=R11; // MA11(D1)
assign _8_04_A1=ICL; // TALLY CTR DRIVE LINE
assign _8_04_A2=ICL; // SHIFT CNTR DRIVE LINE

 .End